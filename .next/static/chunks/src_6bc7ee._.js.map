{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/src/utils/fetcher.ts"],"sourcesContent":["export async function fetcher(url: string) {\n    const response = await fetch(url)\n\n    if (!response.ok) {\n        throw new Error('Erro ao buscar dados!')\n    }\n\n    return response.json()\n}"],"names":[],"mappings":";;;AAAO,eAAe,QAAQ,GAAW;IACrC,MAAM,WAAW,MAAM,MAAM;IAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,MAAM,IAAI,MAAM;IACpB;IAEA,OAAO,SAAS,IAAI;AACxB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///app/src/components/users.tsx"],"sourcesContent":["'use client';\n\nimport useSWR from 'swr';\nimport { fetcher } from '@/utils/fetcher';\n\nexport default function Users() {\n    const { data, error, isLoading } = useSWR('http://localhost:8080/users/getusers', fetcher);\n\n    if (isLoading) return <p>Carregando...</p>;\n    if (error) return <p>Erro ao carregar dados</p>;\n\n    if (!data?.Users || !Array.isArray(data.Users)) {\n        return <p>Dados inválidos ou nenhum usuário encontrado</p>;\n    }\n\n    return (\n        <div>\n            <h1>Lista de Usuários</h1>\n            <ul>\n                {data.Users.map((user: any) => (\n                    <li key={user.ID}>\n                        <strong>{user.name}</strong> - {user.Email} ({user.age} anos)\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAGA;AADA;;;AAFA;;;AAKe,SAAS;;IACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAM,AAAD,EAAE,wCAAwC,0HAAA,CAAA,UAAO;IAEzF,IAAI,WAAW,qBAAO,6LAAC;kBAAE;;;;;;IACzB,IAAI,OAAO,qBAAO,6LAAC;kBAAE;;;;;;IAErB,IAAI,CAAC,MAAM,SAAS,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,GAAG;QAC5C,qBAAO,6LAAC;sBAAE;;;;;;IACd;IAEA,qBACI,6LAAC;;0BACG,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;0BACI,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,qBACb,6LAAC;;0CACG,6LAAC;0CAAQ,KAAK,IAAI;;;;;;4BAAU;4BAAI,KAAK,KAAK;4BAAC;4BAAG,KAAK,GAAG;4BAAC;;uBADlD,KAAK,EAAE;;;;;;;;;;;;;;;;AAOpC;GAtBwB;;QACe,iKAAA,CAAA,UAAM;;;KADrB"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}